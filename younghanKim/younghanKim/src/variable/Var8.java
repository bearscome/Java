package variable;

public class Var8 {
    public static void main(String[] args) {
        // 메모리를 작게 사용하면 작은 숫자를 표현할 수 있고, 메모리를 많이 사용하면 큰 숫자를 표현할 수 있다.
        // 변수를 ㅓㄴ언하면 표현 범위에 따라 메모리 공간을 차지한다. 그래서 필요에 맞도록 타양한 타입을 제공한다.

        // 정수
        byte b = 127; // -128 ~ 127
        short s = 32767; // -32768 ~ 32767
        int i = 2147483647; // -2,147,483,648 ~ 2,147,483,647 약 (20억)
        long l = 9223372036854775807L; // -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807

        // 실수
        float f = 10.0f; // -3.4E38 ~ 3.4E38
        double d = 10.0; // -1.7E308 ~ 1.7E308 (float보다 더 큰 실수를 사용할 수 있음)

        /*
         * [거의 사용하지 않는 타입]
         * 정수 - byte: 표현 길이가 너무 적다 자바는 4byte(int)를 효율적으로 계산하도록 설계되어 있다.
         *  - byte 타입은 직접 선언하고 여기에 숫자 값을 대입해서 계산하는 일은 거의 없다
         *  - 대신에 파일을 바이트 단위로 다루기 때문에 파일 전송 파일 복사 등에 주로 사용된다.
         * 정수 - short: 표현 길이가 너무 적다
         * 실수 - float: 표현 길이와 정밀도가 낮다
         * 문자 - char: 문자 하나를 표현하는 일은 거의 없다. 문자 하나를 표현할 떄도 문자열을 사용할 수 있다.
         * */

        /*
        * [자주 사용하는 타입]
        * 정수 - [int, long]: 자바는 정수에 기본적으로 "int"를 사용하며 만약, 20억이 넘어갈 것 같으면 long을 사용한다
        *  - 파일 다룰 떄는 byte를 사용한다.
        * 실수 - double: 실수는 고민하지 말고 double 사용
        * 블린형 - boolean: true, false
        * 문자열 - String: 문자를 다룰 때는 문자 하나든 문자열 이든 모두 String을 사용하는것이 편리하다
        * */?


    }
}
